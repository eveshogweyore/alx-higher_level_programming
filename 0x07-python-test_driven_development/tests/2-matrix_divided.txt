1. Divide a matrix
==================

First import the ```2-matrix_divided``` module:
>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

# Create a matrix with positive integers:
>>> matrix = [[1, 2, 3], [4, 5, 6]]

# Divide each element in the matrix by 3:
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

# Divide each element in the matrix by 0:
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

# Divide each element in the matrix by a string:
>>> matrix_divided(matrix, "alx")
Traceback (most recent call last):
    ...
TypeError: div must be a number

# Divide each element in the matrix by float("inf"):
>>> matrix_divided(matrix, float("inf"))
Traceback (most recent call last):
    ...
TypeError: div must be a number

# Divide each element in the matrix by float("-inf"):
>>> matrix_divided(matrix, float("-inf"))
Traceback (most recent call last):
    ...
TypeError: div must be a number

# Pass only first argument:
>>> matrix_divided(matrix)
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

# Pass only second argument:
>>> matrix_divided(div=3)
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 1 required positional argument: 'matrix'

# Create matrix with a string as one of the elements:
>>> matrix = [[1, 2, "alx"], [4, 5, 6]]

# Divide matrix by 3:
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Create matrix with uneven length of inner lists:
>>> matrix = [[1, 2], [3, 4, 5]]

# Divide matrix by 3:
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

# Create matrix and set it to None:
>>> matrix = None

# Divide matrix by 3:
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Create matrix and set it to a string:
>>> matrix = "alx"

# Divide matrix by 3:
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Create matrix and set it to an integer value:
>>> matrix = 1

# Divide matrix by 3:
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Pass no argument to matrix:
>>> matrix_divided()
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
